security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
            cost: 15
        App\Entity\User:
            algorithm: bcrypt
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPERADMIN: ROLE_ADMIN
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        login_firewall:
            pattern: ^/login$
            anonymous: ~
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: false
            form_login:
                login_path: /login
                check_path: /login
                default_target_path: /prostages

            # activate different ways to authenticate

            logout:
                path: app_logout
            guard:
                authenticators:
                    - App\Security\LoginFormProstagesAuthenticator
                # where to redirect after logout
                # target: app_any_route

            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/entreprises/ajouter, roles: ROLE_ADMIN}
        - { path: ^/stage-ajout, roles: [ROLE_ADMIN, ROLE_USER]}
        - { path: ^/formations, roles: [ROLE_ADMIN, ROLE_USER]}
        - { path: /login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
